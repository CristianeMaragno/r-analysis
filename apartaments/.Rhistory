setwd("~/Projetos/R/apartaments")
library(data.table)
dados <- fread(input = paste0("apartamento.csv"), header = T, na.strings = "NA", data.table = FALSE, dec=",")
View(dados)
View(dados)
#Transform variável qualitativa
as.character(dados$Local)
#Transform variável qualitativa
dados$Local = as.character(dados$Local)
# Modelo de Regressão Múltipla
modelo <- lm(dados$Valor ~ dados$Area + dados$Idade + dados$Idade + dados$Local, data=dados)
summary(modelo)
# Modelo de Regressão Múltipla
modelo <- lm(dados$Valor ~ dados$Area + dados$Idade + dados$Energia + dados$Local, data=dados)
summary(modelo)
# Modelo de Regressão Múltipla
modelo <- lm(dados$Valor ~ dados$Area + dados$Idade + dados$Local, data=dados)
summary(modelo)
avPlots(modelo)
# Análise Gráfica da relação das variáveis independentes com a variável dependente
library(car)
#Importancia das variáveis
library(relaimpo)
imp<-calc.relimp(modelo)
var.exp<-data.frame(round(imp$lmg*100,1))
colnames(var.exp)<-"imp.lmg"
nome<-rownames(var.exp)
var.exp<-data.frame(nome,var.exp)
library(ggplot2)
ggplot(var.exp,aes(nome,imp.lmg)) +
geom_bar(stat = "identity")+
geom_text(aes(label = imp.lmg), vjust = 1.5, lwd=6, colour = "white")
library(relaimpo)
imp <-calc.relimp(modelo)
# Análise de resíduos
plot(fitted(modelo), rstandard(modelo))
abline(0,0)
library(car)
qqPlot(modelo)
# Gráfico de quantil
plot(fitted(modelo))
abline(0,0)
library(car)
qqPlot(modelo)
#C)
#Importancia das variáveis
library(relaimpo)
imp <-calc.relimp(modelo)
library(relaimpo)
imp <-calc.relimp(modelo)
#B)
#PROBLEMA - análise de multicolinearidade
library(car)
# Modelo de Regressão Múltipla
modelo <- lm(dados$Valor ~ dados$Area + dados$Idade + dados$Local, data=dados)
#A)
#Transform variável qualitativa
dados$Local = as.factor(dados$Local)
# Modelo de Regressão Múltipla
modelo <- lm(dados$Valor ~ dados$Area + dados$Idade + dados$Local, data=dados)
library(relaimpo)
imp <-calc.relimp(modelo)
var.exp<-data.frame(round(imp$lmg*100,1))
colnames(var.exp)<-"imp.lmg"
nome<-rownames(var.exp)
var.exp<-data.frame(nome,var.exp)
library(ggplot2)
ggplot(var.exp,aes(nome,imp.lmg)) +
geom_bar(stat = "identity")+
geom_text(aes(label = imp.lmg), vjust = 1.5, lwd=6, colour = "white")
#A)
#Transform variável qualitativa
dados$Local = as.factor(dados$Local)
dados <- fread(input = paste0("apartamento.csv"), header = T, na.strings = "NA", data.table = FALSE, dec=",")
names(dados)
#A)
#Transform variável qualitativa
dados$Local = as.factor(dados$Local)
# Modelo de Regressão Múltipla
modelo <- lm(dados$Valor ~ dados$Area + dados$Idade +  dados$Energia + dados$Local, data=dados)
summary(modelo)
# Modelo de Regressão Múltipla
modelo <- lm(dados$Valor ~ dados$Area + dados$Idade +  dados$Energia + dados$Local, data=dados)
summary(modelo)
# Modelo de Regressão Múltipla
modelo <- lm(dados$Valor ~ dados$Area + dados$Idade + dados$Local, data=dados)
summary(modelo)
#B)
#PROBLEMA - análise de multicolinearidade
library(car)
vif(modelo) # Avaliar se todas as variáveis realemente são necessárias
avPlots(modelo)
# Modelo de Regressão Múltipla
modelo <- lm(Valor ~ Area + Idade + Local, data=dados)
summary(modelo)
#B)
#PROBLEMA - análise de multicolinearidade
library(car)
vif(modelo) # Avaliar se todas as variáveis realemente são necessárias
avPlots(modelo)
#C)
#Importancia das variáveis
library(relaimpo)
imp <-calc.relimp(modelo)
var.exp<-data.frame(round(imp$lmg*100,1))
colnames(var.exp)<-"imp.lmg"
nome<-rownames(var.exp)
var.exp<-data.frame(nome,var.exp)
library(ggplot2)
ggplot(var.exp,aes(nome,imp.lmg)) +
geom_bar(stat = "identity")+
geom_text(aes(label = imp.lmg), vjust = 1.5, lwd=6, colour = "white")
#D)
#R² Coeficiente de Determinação Ajustado
summary(modelo)
#D)
#R² Coeficiente de Determinação Ajustado
summary(modelo)
# Análise de resíduos
plot(fitted(modelo), rstandard(modelo))
abline(0,0)
library(car)
qqPlot(modelo)
# Gráfico de quantil
plot(fitted(modelo))
abline(0,0)
library(car)
qqPlot(modelo)
#B)
#PROBLEMA - análise de multicolinearidade
library(car)
vif(modelo) # Avaliar se todas as variáveis realemente são necessárias
avPlots(modelo)
avPlots(modelo)
#C)
#Importancia das variáveis
library(relaimpo)
avPlots(modelo)
